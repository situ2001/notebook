(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{240:function(t,e,r){"use strict";r.r(e);var a=r(6),_=Object(a.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"gitignore"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#gitignore"}},[t._v("#")]),t._v(" gitignore")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://git-scm.com/docs/gitignore",target:"_blank",rel:"noopener noreferrer"}},[t._v("git-scm docs"),r("OutboundLink")],1)]),t._v(" "),r("p",[t._v("用于忽略一些指定的untracked file")]),t._v(" "),r("h2",{attrs:{id:"patterns"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#patterns"}},[t._v("#")]),t._v(" Patterns")]),t._v(" "),r("ul",[r("li",[t._v("separator(/)")])]),t._v(" "),r("p",[t._v("只要分隔符/出现在开头或者(和)中间，就会出现相对目录的关系，是相对于本"),r("code",[t._v(".gitignore")]),t._v("文件的(前面/不/都没有问题的)")]),t._v(" "),r("p",[t._v("出现在最后的话，这个pattern仅能match到目录，而不能match同名的文件")]),t._v(" "),r("ul",[r("li",[t._v("asterisk(*)")])]),t._v(" "),r("p",[t._v("通配，match除了slash(/)之外的所有东东，也就是说只能match本层目录里的文件和文件夹")]),t._v(" "),r("ul",[r("li",[t._v("token ?")])]),t._v(" "),r("p",[t._v("match一个字符")]),t._v(" "),r("ul",[r("li",[t._v("range")])]),t._v(" "),r("p",[t._v("匹配一个在"),r("code",[t._v("[a-zA-z]")]),t._v("内的字符，有regex的味道了")]),t._v(" "),r("ul",[r("li",[t._v("asterisk(**)")])]),t._v(" "),r("p",[t._v("leading：表示每个目录里头match的东西比如"),r("code",[t._v("**/foo/bar")]),t._v("表示匹配每个目录里面的"),r("code",[t._v("foo/bar")])]),t._v(" "),r("p",[t._v("trailing: 表示在某目录里头所有的文件比如"),r("code",[t._v("bar/**")])]),t._v(" "),r("p",[t._v("center: 表示目录通配比如"),r("code",[t._v("foo/**/bar")]),t._v("，可以是"),r("code",[t._v("foo/114/514/bar")])])])}),[],!1,null,null,null);e.default=_.exports}}]);