(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{274:function(e,t,_){"use strict";_.r(t);var v=_(6),o=Object(v.a)({},(function(){var e=this,t=e.$createElement,_=e._self._c||t;return _("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[_("h1",{attrs:{id:"命名规范"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#命名规范"}},[e._v("#")]),e._v(" 命名规范")]),e._v(" "),_("p",[e._v("Still, 一个很好的repo: "),_("a",{attrs:{href:"https://github.com/google/styleguide",target:"_blank",rel:"noopener noreferrer"}},[e._v("StyleGuide"),_("OutboundLink")],1),e._v("(原文大部分摘抄自此)")]),e._v(" "),_("blockquote",[_("p",[e._v("Function names, variable names, and filenames should be descriptive; eschew abbreviation. In particular, do not use abbreviations that are ambiguous or unfamiliar to readers outside your project, and do not abbreviate by deleting letters within a word.")])]),e._v(" "),_("p",[e._v("准则呢，还是要"),_("strong",[e._v("优先")]),e._v("保证"),_("strong",[e._v("可读性")]),e._v("与"),_("strong",[e._v("准确性")]),e._v("，不要滥用"),_("strong",[e._v("模棱两可的缩写")]),e._v("，更不要"),_("strong",[e._v("吞字")])]),e._v(" "),_("h2",{attrs:{id:"大致一览"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#大致一览"}},[e._v("#")]),e._v(" 大致一览")]),e._v(" "),_("p",[e._v("摘抄了一些命名的示例，以便快速查阅")]),e._v(" "),_("p",[_("code",[e._v("module_name")]),e._v(", "),_("code",[e._v("package_name")]),e._v(", "),_("code",[e._v("ClassName")]),e._v(", "),_("code",[e._v("method_name")]),e._v(", "),_("code",[e._v("ExceptionName")]),e._v(","),_("code",[e._v("function_name")]),e._v(", "),_("code",[e._v("GLOBAL_CONSTANT_NAME")]),e._v(", "),_("code",[e._v("global_var_name")]),e._v(", "),_("code",[e._v("instance_var_name")]),e._v(","),_("code",[e._v("function_parameter_name")]),e._v(", "),_("code",[e._v("local_var_name")]),e._v(".")]),e._v(" "),_("table",{attrs:{rules:"all",cellspacing:"2",cellpadding:"2"}},[_("tr",[_("th",[e._v("Type")]),e._v(" "),_("th",[e._v("Public")]),e._v(" "),_("th",[e._v("Internal")])]),e._v(" "),_("tr",[_("td",[e._v("Packages")]),e._v(" "),_("td",[_("code",[e._v("lower_with_under")])]),e._v(" "),_("td")]),e._v(" "),_("tr",[_("td",[e._v("Modules")]),e._v(" "),_("td",[_("code",[e._v("lower_with_under")])]),e._v(" "),_("td",[_("code",[e._v("_lower_with_under")])])]),e._v(" "),_("tr",[_("td",[e._v("Classes")]),e._v(" "),_("td",[_("code",[e._v("CapWords")])]),e._v(" "),_("td",[_("code",[e._v("_CapWords")])])]),e._v(" "),_("tr",[_("td",[e._v("Exceptions")]),e._v(" "),_("td",[_("code",[e._v("CapWords")])]),e._v(" "),_("td")]),e._v(" "),_("tr",[_("td",[e._v("Functions")]),e._v(" "),_("td",[_("code",[e._v("lower_with_under()")])]),e._v(" "),_("td",[_("code",[e._v("_lower_with_under()")])])]),e._v(" "),_("tr",[_("td",[e._v("Global/Class Constants")]),e._v(" "),_("td",[_("code",[e._v("CAPS_WITH_UNDER")])]),e._v(" "),_("td",[_("code",[e._v("_CAPS_WITH_UNDER")])])]),e._v(" "),_("tr",[_("td",[e._v("Global/Class Variables")]),e._v(" "),_("td",[_("code",[e._v("lower_with_under")])]),e._v(" "),_("td",[_("code",[e._v("_lower_with_under")])])]),e._v(" "),_("tr",[_("td",[e._v("Instance Variables")]),e._v(" "),_("td",[_("code",[e._v("lower_with_under")])]),e._v(" "),_("td",[_("code",[e._v("_lower_with_under")]),e._v(" (protected)")])]),e._v(" "),_("tr",[_("td",[e._v("Method Names")]),e._v(" "),_("td",[_("code",[e._v("lower_with_under()")])]),e._v(" "),_("td",[_("code",[e._v("_lower_with_under()")]),e._v(" (protected)")])]),e._v(" "),_("tr",[_("td",[e._v("Function/Method Parameters")]),e._v(" "),_("td",[_("code",[e._v("lower_with_under")])]),e._v(" "),_("td")]),e._v(" "),_("tr",[_("td",[e._v("Local Variables")]),e._v(" "),_("td",[_("code",[e._v("lower_with_under")])]),e._v(" "),_("td")])]),e._v(" "),_("h2",{attrs:{id:"命名习惯"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#命名习惯"}},[e._v("#")]),e._v(" 命名习惯")]),e._v(" "),_("p",[e._v("简的来说就是：")]),e._v(" "),_("ol",[_("li",[e._v("内部变量需要在前面加个underscore(_)")]),e._v(" "),_("li",[e._v("将相关的类与顶端函数放在同一个module里，不像Java的那样严格。")]),e._v(" "),_("li",[e._v("类名是每个单词首字母大写，如"),_("code",[e._v("ClassExample")])]),e._v(" "),_("li",[e._v("不建议模块名跟类名重合，会产生歧义，如"),_("code",[e._v("from Login import Login")])]),e._v(" "),_("li",[e._v("还有单元测试的规范，详情见下第五条")])]),e._v(" "),_("hr"),e._v(" "),_("ul",[_("li",[_("p",[e._v('"Internal" means internal to a module, or protected or private within a\nclass.')])]),e._v(" "),_("li",[_("p",[e._v("Prepending a single underscore ("),_("code",[e._v("_")]),e._v(") has some support for protecting module\nvariables and functions (linters will flag protected member access). While\nprepending a double underscore ("),_("code",[e._v("__")]),e._v(' aka "dunder") to an instance variable\nor method effectively makes the variable or method private to its class\n(using name mangling); we discourage its use as it impacts readability and\ntestability, and isn\'t '),_("em",[e._v("really")]),e._v(" private.")])]),e._v(" "),_("li",[_("p",[e._v("Place related classes and top-level functions together in a\nmodule.\nUnlike Java, there is no need to limit yourself to one class per module.")])]),e._v(" "),_("li",[_("p",[e._v("Use CapWords for class names, but lower_with_under.py for module names.\nAlthough there are some old modules named CapWords.py, this is now\ndiscouraged because it's confusing when the module happens to be named after\na class. (\"wait -- did I write "),_("code",[e._v("import StringIO")]),e._v(" or "),_("code",[e._v("from StringIO import StringIO")]),e._v('?")')])]),e._v(" "),_("li",[_("p",[e._v("Underscores may appear in "),_("em",[e._v("unittest")]),e._v(" method names starting with "),_("code",[e._v("test")]),e._v(" to\nseparate logical components of the name, even if those components use\nCapWords. One possible pattern is "),_("code",[e._v("test<MethodUnderTest>_<state>")]),e._v("; for\nexample "),_("code",[e._v("testPop_EmptyStack")]),e._v(" is okay. There is no One Correct Way to name\ntest methods.")])])]),e._v(" "),_("h2",{attrs:{id:"要避免的"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#要避免的"}},[e._v("#")]),e._v(" 要避免的")]),e._v(" "),_("ol",[_("li",[e._v("避免一些"),_("strong",[e._v("有专门用途的单字母变量")])]),e._v(" "),_("li",[e._v("避免模块名和包名出现"),_("strong",[e._v("dash(-)")])]),e._v(" "),_("li",[e._v("避免如__main__这类的python"),_("strong",[e._v("预留变量或方法")])]),e._v(" "),_("li",[e._v("避免"),_("strong",[e._v("阴阳怪气")]),e._v("的起名")]),e._v(" "),_("li",[e._v("如果能直接看出类型，不需要在"),_("strong",[e._v("名字里塞类型")])])]),e._v(" "),_("hr"),e._v(" "),_("ul",[_("li",[_("p",[e._v("single character names, except for specifically allowed cases:")]),e._v(" "),_("ul",[_("li",[e._v("counters or iterators (e.g. "),_("code",[e._v("i")]),e._v(", "),_("code",[e._v("j")]),e._v(", "),_("code",[e._v("k")]),e._v(", "),_("code",[e._v("v")]),e._v(", et al.)")]),e._v(" "),_("li",[_("code",[e._v("e")]),e._v(" as an exception identifier in "),_("code",[e._v("try/except")]),e._v(" statements.")]),e._v(" "),_("li",[_("code",[e._v("f")]),e._v(" as a file handle in "),_("code",[e._v("with")]),e._v(" statements")])]),e._v(" "),_("p",[e._v("Please be mindful not to abuse single-character naming. Generally speaking,\ndescriptiveness should be proportional to the name's scope of visibility.\nFor example, "),_("code",[e._v("i")]),e._v(" might be a fine name for 5-line code block but within\nmultiple nested scopes, it is likely too vague.")])]),e._v(" "),_("li",[_("p",[e._v("dashes ("),_("code",[e._v("-")]),e._v(") in any package/module name")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("__double_leading_and_trailing_underscore__")]),e._v(" names (reserved by Python)")])]),e._v(" "),_("li",[_("p",[e._v("offensive terms")])]),e._v(" "),_("li",[_("p",[e._v("names that needlessly include the type of the variable (for example:\n"),_("code",[e._v("id_to_name_dict")]),e._v(")")])])])])}),[],!1,null,null,null);t.default=o.exports}}]);